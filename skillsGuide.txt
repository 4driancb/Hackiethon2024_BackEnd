How to create a new skill class using the "Skill" superclass from skills.py:

All skills should at least have a startup/cast time, cooldown and skill value

    - Startup/cast time is the time taken after activating a skill for the skill
      to actually take effect (can be set to 0)

    - Cooldown starts at a given value, can be reduced using the reduceCd method
    
    - Skill value differs in type amongst different skill types. For example, it
      could be of type (distance in x axis, distance in y axis) for move skills, 
      damage for attack skills etc. It is important that it can be processed by
      the appropriate functions in GameManager

To create a skill class named xyz with SkillType and xyzSkillValue: 

def xyz(Skill):
    def __init__(self, startup, cooldown, xyzSkillValue):
        super().__init__(SkillType, startup, cooldown, xyzSkillValue)

When adding parameters Param1, Param2 to the skill:

def xyz(Skill):
    def __init__(self, startup, cooldown, xyzSkillValue, Param1, Param2):
        super().__init__(SkillType, startup, cooldown, xyzSkillValue)
        self.Param1 = Param1
        self.Param2 = Param2

And additional methods can be added like normal
Refer to the AttackSkill class in Skills.py as an example

